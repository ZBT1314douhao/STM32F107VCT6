<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [cube_prj\cube_prj.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image cube_prj\cube_prj.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Tue May 03 15:09:23 2016
<BR><P>
<H3>Maximum Stack Usage =        368 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC1_2_IRQHandler</a><BR>
 <LI><a href="#[192]">_PopFreeBlock</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a1]">_EnlargeBlocks</a><BR>
 <LI><a href="#[ef]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f6]">_InitOnce</a><BR>
 <LI><a href="#[1a3]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a3]">_Findy1</a><BR>
 <LI><a href="#[1a5]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a5]">_Findx1</a><BR>
 <LI><a href="#[1a4]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a4]">_Findx0</a><BR>
 <LI><a href="#[18f]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18f]">WM__InvalidateRect</a><BR>
 <LI><a href="#[183]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[183]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[17e]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17e]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[17a]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[186]">WM__SendMessage</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC1_2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[1e]">CAN1_RX0_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[1f]">CAN1_RX1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[20]">CAN1_SCE_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[1d]">CAN1_TX_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[43]">CAN2_RX0_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[44]">CAN2_RX1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[45]">CAN2_SCE_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[42]">CAN2_TX_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[15]">DMA1_Channel1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[16]">DMA1_Channel2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[17]">DMA1_Channel3_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[18]">DMA1_Channel4_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[19]">DMA1_Channel5_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[1a]">DMA1_Channel6_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[1b]">DMA1_Channel7_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[3b]">DMA2_Channel1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[3c]">DMA2_Channel2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[3d]">DMA2_Channel3_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[3e]">DMA2_Channel4_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[3f]">DMA2_Channel5_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[40]">ETH_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[41]">ETH_WKUP_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[32]">EXTI15_10_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[21]">EXTI9_5_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[60]">GUIDRV_FlexColor_SetFunc66702</a> from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[5f]">GUIDRV_FlexColor_SetMode16bppC0B16</a> from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[54]">GUIDRV_FlexColor__GetPixelIndexNoCache</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[58]">GUIDRV_FlexColor__SetLog2Phys</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetLog2Phys) referenced from guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce)
 <LI><a href="#[55]">GUIDRV_FlexColor__SetPixelIndexNoCache</a> from guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[9e]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[9f]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[a0]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[a1]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced 2 times from f6x8.o(.constdata)
 <LI><a href="#[9a]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced from f32b_ascii.o(.constdata)
 <LI><a href="#[9b]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced from f32b_ascii.o(.constdata)
 <LI><a href="#[9c]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced from f32b_ascii.o(.constdata)
 <LI><a href="#[9d]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced from f32b_ascii.o(.constdata)
 <LI><a href="#[68]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[ba]">GUI_X_ExecIdle</a> from gui_x.o(i.GUI_X_ExecIdle) referenced from gui_waitevent.o(.data)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[2a]">I2C1_ER_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[29]">I2C1_EV_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[2c]">I2C2_ER_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[2b]">I2C2_EV_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[78]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[79]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[b8]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced from gui_core.o(.data)
 <LI><a href="#[74]">LCD_Index2Color_M565</a> from guicc_m565_index2color.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[5e]">LcdReadDataMultiple</a> from lcdconf_flexcolor_template.o(i.LcdReadDataMultiple) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[5c]">LcdWriteData</a> from lcdconf_flexcolor_template.o(i.LcdWriteData) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[5d]">LcdWriteDataMultiple</a> from lcdconf_flexcolor_template.o(i.LcdWriteDataMultiple) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[5b]">LcdWriteReg</a> from lcdconf_flexcolor_template.o(i.LcdWriteReg) referenced from lcdconf_flexcolor_template.o(i.LCD_X_Config)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[46]">OTG_FS_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[34]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[2d]">SPI1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[2e]">SPI2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[36]">SPI3_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[48]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f107xc.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[22]">TIM1_BRK_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[25]">TIM1_CC_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[24]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[23]">TIM1_UP_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[26]">TIM2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[27]">TIM3_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[28]">TIM4_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[35]">TIM5_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[39]">TIM6_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[3a]">TIM7_IRQHandler</a> from stm32f1xx_it.o(i.TIM7_IRQHandler) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[37]">UART4_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[38]">UART5_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[2f]">USART1_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[30]">USART2_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[31]">USART3_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f107xc.o(.text) referenced from startup_stm32f107xc.o(RESET)
 <LI><a href="#[7c]">_CalcSizeOfChar</a> from gui_uc_encodeutf8.o(i._CalcSizeOfChar) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[76]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[b5]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[73]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[7e]">_DrawBitmap</a> from guidrv_flexcolor.o(i._DrawBitmap) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[52]">_DrawBitmap</a> from guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[7f]">_DrawHLine</a> from guidrv_flexcolor.o(i._DrawHLine) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[80]">_DrawVLine</a> from guidrv_flexcolor.o(i._DrawVLine) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[7d]">_Encode</a> from gui_uc_encodeutf8.o(i._Encode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[81]">_FillRect</a> from guidrv_flexcolor.o(i._FillRect) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[53]">_FillRect</a> from guidrv_flexcolor_16bpp_c0b16.o(i._FillRect) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[7a]">_GetCharCode</a> from gui_uc_encodeutf8.o(i._GetCharCode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[7b]">_GetCharSize</a> from gui_uc_encodeutf8.o(i._GetCharSize) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[88]">_GetDevData</a> from guidrv_flexcolor.o(i._GetDevData) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[86]">_GetDevFunc</a> from guidrv_flexcolor.o(i._GetDevFunc) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[65]">_GetDevFunc_Init</a> from guidrv_flexcolor.o(i._GetDevFunc_Init) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[69]">_GetDevFunc_SetRect</a> from guidrv_flexcolor.o(i._GetDevFunc_SetRect) referenced from guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside)
 <LI><a href="#[67]">_GetDevFunc_SetRectOutside</a> from guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[64]">_GetDevFunc_SetSize</a> from guidrv_flexcolor.o(i._GetDevFunc_SetSize) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[63]">_GetDevFunc_SetVSize</a> from guidrv_flexcolor.o(i._GetDevFunc_SetVSize) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[87]">_GetDevProp</a> from guidrv_flexcolor.o(i._GetDevProp) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[b7]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[75]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[82]">_GetPixelIndex</a> from guidrv_flexcolor.o(i._GetPixelIndex) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[89]">_GetRect</a> from guidrv_flexcolor.o(i._GetRect) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[77]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[b6]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[8a]">_Log2PhysX_X0Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[8e]">_Log2PhysX_X0Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[8c]">_Log2PhysX_X0Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[90]">_Log2PhysX_X0Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[8b]">_Log2PhysX_X1Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[8f]">_Log2PhysX_X1Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[8d]">_Log2PhysX_X1Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[91]">_Log2PhysX_X1Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[92]">_Log2PhysY_X0Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[96]">_Log2PhysY_X0Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[94]">_Log2PhysY_X0Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[98]">_Log2PhysY_X0Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[93]">_Log2PhysY_X1Y0S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[97]">_Log2PhysY_X1Y0S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[95]">_Log2PhysY_X1Y1S0</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[99]">_Log2PhysY_X1Y1S1</a> from guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1) referenced from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[b9]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced from gui_charline.o(.data)
 <LI><a href="#[59]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[5a]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[62]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[6a]">_OnExit</a> from gui_alloc.o(i._OnExit) referenced from gui_alloc.o(i._InitOnce)
 <LI><a href="#[56]">_ReadData</a> from guidrv_flexcolor_16bpp_c0b16.o(i._ReadData) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[6d]">_ReadPixelCust_16bpp</a> from guidrv_flexcolor.o(i._ReadPixelCust_16bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[6c]">_ReadPixelCust_18bpp</a> from guidrv_flexcolor.o(i._ReadPixelCust_18bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[4e]">_ReadPixel_16bpp_B16</a> from guidrv_flexcolor_func66702.o(i._ReadPixel_16bpp_B16) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[4d]">_ReadPixel_16bpp_B8</a> from guidrv_flexcolor_func66702.o(i._ReadPixel_16bpp_B8) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[6e]">_ReadRectCust_16bpp</a> from guidrv_flexcolor.o(i._ReadRectCust_16bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[6b]">_ReadRectCust_18bpp</a> from guidrv_flexcolor.o(i._ReadRectCust_18bpp) referenced from guidrv_flexcolor.o(i._SetDevFunc)
 <LI><a href="#[4f]">_ReadRect_16bpp_B16</a> from guidrv_flexcolor_func66702.o(i._ReadRect_16bpp_B16) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[50]">_ReadRect_16bpp_B8</a> from guidrv_flexcolor_func66702.o(i._ReadRect_16bpp_B8) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[a7]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[a6]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[66]">_SetDevFunc</a> from guidrv_flexcolor.o(i._SetDevFunc) referenced from guidrv_flexcolor.o(i._GetDevFunc)
 <LI><a href="#[a8]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[51]">_SetInterface</a> from guidrv_flexcolor_func66702.o(i._SetInterface) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[85]">_SetOrg</a> from guidrv_flexcolor.o(i._SetOrg) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[4c]">_SetOrientation</a> from guidrv_flexcolor_func66702.o(i._SetOrientation) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[4a]">_SetPhysRAMAddr</a> from guidrv_flexcolor_func66702.o(i._SetPhysRAMAddr) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[83]">_SetPixelIndex</a> from guidrv_flexcolor.o(i._SetPixelIndex) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[4b]">_SetRect</a> from guidrv_flexcolor_func66702.o(i._SetRect) referenced from guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
 <LI><a href="#[6f]">_SetReg_B16</a> from guidrv_flexcolor_func66702.o(i._SetReg_B16) referenced from guidrv_flexcolor_func66702.o(i._SetInterface)
 <LI><a href="#[71]">_SetReg_B8</a> from guidrv_flexcolor_func66702.o(i._SetReg_B8) referenced from guidrv_flexcolor_func66702.o(i._SetInterface)
 <LI><a href="#[57]">_WriteData</a> from guidrv_flexcolor_16bpp_c0b16.o(i._WriteData) referenced from guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
 <LI><a href="#[70]">_WritePara_B16</a> from guidrv_flexcolor_func66702.o(i._WritePara_B16) referenced from guidrv_flexcolor_func66702.o(i._SetInterface)
 <LI><a href="#[72]">_WritePara_B8</a> from guidrv_flexcolor_func66702.o(i._WritePara_B8) referenced from guidrv_flexcolor_func66702.o(i._SetInterface)
 <LI><a href="#[84]">_XorPixel</a> from guidrv_flexcolor.o(i._XorPixel) referenced 2 times from guidrv_flexcolor.o(.constdata)
 <LI><a href="#[49]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f107xc.o(.text)
 <LI><a href="#[61]">cbBackWin</a> from wm.o(i.cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[47]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[49]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(.text)
</UL>
<P><STRONG><a name="[1ce]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[bb]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[cd]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1cf]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1d0]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[1d1]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[1d2]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[1d3]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Channel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f107xc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[cb]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1d4]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[1d5]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[e4]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__SetLog2Phys
</UL>

<P><STRONG><a name="[1aa]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
</UL>

<P><STRONG><a name="[1d6]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[1d8]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[161]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[1da]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[c0]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[c5]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[c6]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[c7]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[c8]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[c9]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
</UL>

<P><STRONG><a name="[c1]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[1db]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1dc]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[1dd]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[c3]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[cc]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1b3]"></a>__ARM_scalbn</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1de]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[1cc]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[bc]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1df]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[ce]"></a>_dsqrt</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, dsqrt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[cf]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[d1]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 456 bytes, Stack size 84 bytes, gui_drawline.o(i.GL_DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[d0]"></a>GL_DrawLineEx</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[d3]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_drawpoint.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[db]"></a>GL_FillCircle</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[d9]"></a>GL_FillPolygon</STRONG> (Thumb, 466 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GL_FillPolygon &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[e1]"></a>GUIDRV_FlexColor_Config</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIDRV_FlexColor_Config &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[e3]"></a>GUIDRV_FlexColor_SetFunc</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor_SetFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUIDRV_FlexColor_SetFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[60]"></a>GUIDRV_FlexColor_SetFunc66702</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUIDRV_FlexColor_SetFunc66702 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[5f]"></a>GUIDRV_FlexColor_SetMode16bppC0B16</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUIDRV_FlexColor_SetMode16bppC0B16 &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[54]"></a>GUIDRV_FlexColor__GetPixelIndexNoCache</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__GetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUIDRV_FlexColor__GetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[e2]"></a>GUIDRV_FlexColor__InitOnce</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetMode16bppC0B16
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc66702
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetDevFunc
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetVSize
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_SetSize
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[58]"></a>GUIDRV_FlexColor__SetLog2Phys</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetLog2Phys))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GUIDRV_FlexColor__SetLog2Phys &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i.GUIDRV_FlexColor__InitOnce)
</UL>
<P><STRONG><a name="[55]"></a>GUIDRV_FlexColor__SetPixelIndexNoCache</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, guidrv_flexcolor.o(i.GUIDRV_FlexColor__SetPixelIndexNoCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUIDRV_FlexColor__SetPixelIndexNoCache
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[9e]"></a>GUIMONO_DispChar</STRONG> (Thumb, 304 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 2]<UL><LI> f6x8.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 2]<UL><LI> f6x8.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 2]<UL><LI> f6x8.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 2]<UL><LI> f6x8.o(.constdata)
<LI> f8x16.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>GUIPROP_DispChar</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUIPROP_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f32b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f32b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f32b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f32b_ascii.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[ee]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>

<P><STRONG><a name="[f0]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[130]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[f3]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[103]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[e5]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[f1]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[f2]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[f9]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[107]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gui_adddecshift.o(i.GUI_AddDecShift))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
</UL>

<P><STRONG><a name="[193]"></a>GUI_CalcColorDist</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[fa]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[fc]"></a>GUI_ClearRect</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>

<P><STRONG><a name="[ff]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>

<P><STRONG><a name="[100]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[102]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[101]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>

<P><STRONG><a name="[104]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[13b]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>

<P><STRONG><a name="[106]"></a>GUI_DispDecAt</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecShift
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
</UL>

<P><STRONG><a name="[109]"></a>GUI_DispString</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
</UL>

<P><STRONG><a name="[108]"></a>GUI_DispStringAt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
</UL>

<P><STRONG><a name="[110]"></a>GUI_DrawLine</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_baffle_board
</UL>

<P><STRONG><a name="[111]"></a>GUI_FillCircle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, gui_circ.o(i.GUI_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GUI_FillCircle &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
</UL>

<P><STRONG><a name="[1ab]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[ec]"></a>GUI_GetBkColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[136]"></a>GUI_GetCharDistX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[138]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[eb]"></a>GUI_GetColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[10a]"></a>GUI_GetFontDistY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[10b]"></a>GUI_GetYAdjust</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[1ad]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[1ac]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[fb]"></a>GUI_GotoXY</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GotoXY
</UL>
<BR>[Calls]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>

<P><STRONG><a name="[117]"></a>GUI_Init</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[121]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[123]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MEMDEV_GetDataPtr
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[68]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[1a9]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[189]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>

<P><STRONG><a name="[196]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[11f]"></a>GUI_SelectLCD</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_SelectLCD &rArr; LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[129]"></a>GUI_SelectLayer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[12a]"></a>GUI_SetBkColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_baffle_board
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[ed]"></a>GUI_SetColor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_baffle_board
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[131]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[1be]"></a>GUI_SetFont</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11c]"></a>GUI_SetOrg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1ba]"></a>GUI_SetPenSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_baffle_board
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
</UL>

<P><STRONG><a name="[12e]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[12d]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[1c8]"></a>GUI_UC_SetEncodeUTF8</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i.GUI_UC_SetEncodeUTF8))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[135]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[10f]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[19b]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[120]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[12f]"></a>GUI_X_Config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[ba]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_ExecIdle))
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[119]"></a>GUI_X_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_x.o(i.GUI_X_Init))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[195]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
</UL>

<P><STRONG><a name="[118]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[10e]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[10d]"></a>GUI__GetLineDistX</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineDistX &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[10c]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[137]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__GetOverlap
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
</UL>

<P><STRONG><a name="[180]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[15c]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[139]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[13a]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[133]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>

<P><STRONG><a name="[e6]"></a>GUI__memset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>

<P><STRONG><a name="[1a2]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[d7]"></a>GUI_cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.GUI_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_cos &rArr; GUI_sin
</UL>
<BR>[Calls]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[d8]"></a>GUI_sin</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui_drawline.o(i.GUI_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[13c]"></a>HAL_CRC_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRC_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[13d]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, crc.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[13e]"></a>HAL_Delay</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
</UL>

<P><STRONG><a name="[16b]"></a>HAL_GPIO_Init</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_as_output
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_as_input
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[1c2]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_down
</UL>

<P><STRONG><a name="[e0]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_data
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_addr
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_read_data_multiple
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_reg
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Write
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[13f]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[16c]"></a>HAL_IncTick</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[140]"></a>HAL_Init</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[142]"></a>HAL_InitTick</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[143]"></a>HAL_MspInit</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[146]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[141]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>

<P><STRONG><a name="[148]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 494 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[149]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 638 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[144]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 4 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetHCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[14a]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 184 bytes, Stack size 60 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[14b]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1946 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RCC_OscConfig &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[16e]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_CLKSourceConfig))
<BR><BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[14d]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Callback))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[145]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[14c]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[156]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[e8]"></a>LCD_DrawBitmap</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[78]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[e9]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[14e]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[112]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[114]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[150]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[151]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[152]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[153]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[154]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[b8]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[155]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>

<P><STRONG><a name="[113]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[74]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565_index2color.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[158]"></a>LCD_InitLUT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LCD_InitLUT &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[126]"></a>LCD_SelectLCD</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[12b]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[160]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[15b]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[15a]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[12c]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[15f]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>

<P><STRONG><a name="[e7]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
</UL>

<P><STRONG><a name="[159]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[15d]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[15e]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[127]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[132]"></a>LCD_X_Config</STRONG> (Thumb, 102 bytes, Stack size 136 bytes, lcdconf_flexcolor_template.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_SetFunc
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor_Config
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[162]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, lcdconf_flexcolor_template.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD_X_DisplayDriver &rArr; lcd_config &rArr; lcd_write_reg &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevFunc_Init
</UL>

<P><STRONG><a name="[164]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[165]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[122]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[169]"></a>MX_CRC_Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, crc.o(i.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRC_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[16a]"></a>MX_GPIO_Init</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f1xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTick_Handler &rArr; HAL_SYSTICK_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[16d]"></a>SystemClock_Config</STRONG> (Thumb, 136 bytes, Stack size 120 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_CLKSourceConfig
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>SystemInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.TIM7_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f107xc.o(RESET)
</UL>
<P><STRONG><a name="[128]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[16f]"></a>WM_BringToBottom</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[173]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 318 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[178]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[1a6]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>

<P><STRONG><a name="[17b]"></a>WM_GetFirstChild</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetFirstChild
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[171]"></a>WM_GetParent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[11d]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[17d]"></a>WM_InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>

<P><STRONG><a name="[176]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[183]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[175]"></a>WM_SelectWindow</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[17a]"></a>WM_SendToParent</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[187]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[17c]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[17f]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[181]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[179]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>

<P><STRONG><a name="[18b]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>

<P><STRONG><a name="[18c]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[fe]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[170]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
</UL>

<P><STRONG><a name="[18e]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>

<P><STRONG><a name="[fd]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[174]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[182]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[17e]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[18f]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[172]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[1a8]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[185]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[186]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
</UL>

<P><STRONG><a name="[177]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[1cd]"></a>__ARM_fpclassify</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1ae]"></a>__kernel_poly</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1af]"></a>__mathlib_dbl_divzero</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_divzero))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_divzero &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1b0]"></a>__mathlib_dbl_infnan2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_infnan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_dbl_infnan2 &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1b1]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1b2]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_overflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1b4]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __mathlib_dbl_underflow &rArr; __ARM_scalbn
</UL>
<BR>[Calls]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1e0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1e1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1e2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1ca]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1c4]"></a>delay_ms</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, delay.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
</UL>

<P><STRONG><a name="[1c3]"></a>delay_n_ms</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, delay.o(i.delay_n_ms))
<BR><BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read
</UL>

<P><STRONG><a name="[1bb]"></a>delay_n_us</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, delay.o(i.delay_n_us))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
</UL>

<P><STRONG><a name="[11b]"></a>emWin_LCD_Init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[1c0]"></a>game_start_screen</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, gui_game.o(i.game_start_screen))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = game_start_screen &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1bf]"></a>key_read</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, key.o(i.key_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = key_read &rArr; key_press_down
</UL>
<BR>[Calls]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_press_down
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
</UL>

<P><STRONG><a name="[163]"></a>lcd_config</STRONG> (Thumb, 494 bytes, Stack size 40 bytes, lcd_ssd1289.o(i.lcd_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = lcd_config &rArr; lcd_write_reg &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_reg
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>

<P><STRONG><a name="[166]"></a>lcd_read_data_multiple</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, lcd_ssd1289.o(i.lcd_read_data_multiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = lcd_read_data_multiple &rArr; GPIO_Read &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_as_output
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_data_as_input
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdReadDataMultiple
</UL>

<P><STRONG><a name="[168]"></a>lcd_write_addr</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, lcd_ssd1289.o(i.lcd_write_addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_write_addr &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteReg
</UL>

<P><STRONG><a name="[167]"></a>lcd_write_data</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lcd_ssd1289.o(i.lcd_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_write_data &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteDataMultiple
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdWriteData
</UL>

<P><STRONG><a name="[47]"></a>main</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = main &rArr; GUI_Init &rArr; GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[de]"></a>pow</STRONG> (Thumb, 2512 bytes, Stack size 128 bytes, pow.o(i.pow))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan2
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_divzero
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Read
</UL>

<P><STRONG><a name="[1cb]"></a>sqrt</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>

<P><STRONG><a name="[1c9]"></a>start_game</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, gui_game.o(i.start_game))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = start_game &rArr; ball_start_move &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_start_screen
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;game_over
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baffle_board_right_move
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baffle_board_left_move
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[147]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[1c1]"></a>key_press_down</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, key.o(i.key_press_down))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = key_press_down
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read
</UL>

<P><STRONG><a name="[dd]"></a>GPIO_Read</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_ssd1289.o(i.GPIO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = GPIO_Read &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pow
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_read_data_multiple
</UL>

<P><STRONG><a name="[df]"></a>GPIO_Write</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, lcd_ssd1289.o(i.GPIO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_data
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_addr
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_reg
</UL>

<P><STRONG><a name="[1c6]"></a>lcd_data_as_input</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, lcd_ssd1289.o(i.lcd_data_as_input))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_data_as_input &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_read_data_multiple
</UL>

<P><STRONG><a name="[1c7]"></a>lcd_data_as_output</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, lcd_ssd1289.o(i.lcd_data_as_output))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_data_as_output &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_read_data_multiple
</UL>

<P><STRONG><a name="[1c5]"></a>lcd_write_reg</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, lcd_ssd1289.o(i.lcd_write_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = lcd_write_reg &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_config
</UL>

<P><STRONG><a name="[1b5]"></a>baffle_board_left_move</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui_game.o(i.baffle_board_left_move))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = baffle_board_left_move &rArr; clear_baffle_board &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_baffle_board
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[1b8]"></a>baffle_board_right_move</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_game.o(i.baffle_board_right_move))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = baffle_board_right_move &rArr; clear_baffle_board &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;draw_baffle_board
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_baffle_board
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[1bc]"></a>ball_move_dir</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, gui_game.o(i.ball_move_dir))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_start_move
</UL>

<P><STRONG><a name="[1b9]"></a>ball_start_move</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, gui_game.o(i.ball_start_move))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ball_start_move &rArr; GUI_DispDecAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillCircle
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecAt
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ball_move_dir
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_n_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[1b7]"></a>clear_baffle_board</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gui_game.o(i.clear_baffle_board))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = clear_baffle_board &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baffle_board_right_move
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baffle_board_left_move
</UL>

<P><STRONG><a name="[1b6]"></a>draw_baffle_board</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gui_game.o(i.draw_baffle_board))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = draw_baffle_board &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baffle_board_right_move
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;baffle_board_left_move
</UL>

<P><STRONG><a name="[1bd]"></a>game_over</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_game.o(i.game_over))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = game_over &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start_game
</UL>

<P><STRONG><a name="[5e]"></a>LcdReadDataMultiple</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lcdconf_flexcolor_template.o(i.LcdReadDataMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = LcdReadDataMultiple &rArr; lcd_read_data_multiple &rArr; GPIO_Read &rArr; pow &rArr; __kernel_poly &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_read_data_multiple
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[5c]"></a>LcdWriteData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LcdWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LcdWriteData &rArr; lcd_write_data &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[5d]"></a>LcdWriteDataMultiple</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, lcdconf_flexcolor_template.o(i.LcdWriteDataMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LcdWriteDataMultiple &rArr; lcd_write_data &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[5b]"></a>LcdWriteReg</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcdconf_flexcolor_template.o(i.LcdWriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LcdWriteReg &rArr; lcd_write_addr &rArr; GPIO_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_write_addr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcdconf_flexcolor_template.o(i.LCD_X_Config)
</UL>
<P><STRONG><a name="[76]"></a>_Color2IndexBulk</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>_Color2Index_M565</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>_AddFreeMemory</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[ef]"></a>_Alloc</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[1a1]"></a>_EnlargeBlocks</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[190]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[f6]"></a>_InitOnce</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TestRAM
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[6a]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[192]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _PopFreeBlock &rArr;  _EnlargeBlocks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[f5]"></a>_PushFreeBlock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[f8]"></a>_RemoveFreeBlock</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[f7]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[1a7]"></a>_TestRAM</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, gui_alloc.o(i._TestRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[191]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[11a]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[59]"></a>_OnExit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[105]"></a>_UnlinkDevice</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_device.o(i._UnlinkDevice))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>

<P><STRONG><a name="[d2]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.Abs))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[da]"></a>_DrawLineEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_drawline.o(i._DrawLineEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[d5]"></a>_SetLineColor</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, gui_drawline.o(i._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[d6]"></a>_atan2</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, gui_drawline.o(i._atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[7c]"></a>_CalcSizeOfChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Encode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[7d]"></a>_Encode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_uc_encodeutf8.o(i._Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Encode
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizeOfChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>_GetCharCode</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>_GetCharSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>_DrawBitmap</STRONG> (Thumb, 34 bytes, Stack size 56 bytes, guidrv_flexcolor.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>_DrawHLine</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>_DrawVLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawVLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>_FillRect</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>_GetDevFunc</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>_GetDevFunc_Init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _GetDevFunc_Init &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[69]"></a>_GetDevFunc_SetRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside)
</UL>
<P><STRONG><a name="[67]"></a>_GetDevFunc_SetRectOutside</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetRectOutside))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetDevFunc_SetRectOutside
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[64]"></a>_GetDevFunc_SetSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _GetDevFunc_SetSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[63]"></a>_GetDevFunc_SetVSize</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._GetDevFunc_SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _GetDevFunc_SetVSize &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[87]"></a>_GetDevProp</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>_GetPixelIndex</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetPixelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>_GetRect</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>_Log2PhysX_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>_Log2PhysX_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>_Log2PhysX_X0Y1S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>_Log2PhysX_X0Y1S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>_Log2PhysX_X1Y0S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>_Log2PhysX_X1Y0S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>_Log2PhysX_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>_Log2PhysX_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysX_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>_Log2PhysY_X0Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>_Log2PhysY_X0Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>_Log2PhysY_X0Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>_Log2PhysY_X0Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X0Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>_Log2PhysY_X1Y0S0</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>_Log2PhysY_X1Y0S1</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y0S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>_Log2PhysY_X1Y1S0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S0))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>_Log2PhysY_X1Y1S1</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._Log2PhysY_X1Y1S1))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>_ReadPixelCust_16bpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._ReadPixelCust_16bpp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[6c]"></a>_ReadPixelCust_18bpp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._ReadPixelCust_18bpp))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[6e]"></a>_ReadRectCust_16bpp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._ReadRectCust_16bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRectCust_16bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[6b]"></a>_ReadRectCust_18bpp</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._ReadRectCust_18bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadRectCust_18bpp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._SetDevFunc)
</UL>
<P><STRONG><a name="[66]"></a>_SetDevFunc</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, guidrv_flexcolor.o(i._SetDevFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _SetDevFunc &rArr; GUIDRV_FlexColor__InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIDRV_FlexColor__InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[85]"></a>_SetOrg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guidrv_flexcolor.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>_SetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidrv_flexcolor.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>_XorPixel</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, guidrv_flexcolor.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 310 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[198]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[199]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[19a]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 206 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _DrawBitLine8BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[52]"></a>_DrawBitmap</STRONG> (Thumb, 238 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine4BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[53]"></a>_FillRect</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI__memset16
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[56]"></a>_ReadData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._ReadData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[57]"></a>_WriteData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, guidrv_flexcolor_16bpp_c0b16.o(i._WriteData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_16bpp_c0b16.o(i.GUIDRV_FlexColor_SetMode16bppC0B16)
</UL>
<P><STRONG><a name="[4e]"></a>_ReadPixel_16bpp_B16</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, guidrv_flexcolor_func66702.o(i._ReadPixel_16bpp_B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ReadPixel_16bpp_B16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[4d]"></a>_ReadPixel_16bpp_B8</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_flexcolor_func66702.o(i._ReadPixel_16bpp_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ReadPixel_16bpp_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[4f]"></a>_ReadRect_16bpp_B16</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, guidrv_flexcolor_func66702.o(i._ReadRect_16bpp_B16))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _ReadRect_16bpp_B16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[50]"></a>_ReadRect_16bpp_B8</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, guidrv_flexcolor_func66702.o(i._ReadRect_16bpp_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ReadRect_16bpp_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[51]"></a>_SetInterface</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guidrv_flexcolor_func66702.o(i._SetInterface))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[4c]"></a>_SetOrientation</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidrv_flexcolor_func66702.o(i._SetOrientation))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetOrientation
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[4a]"></a>_SetPhysRAMAddr</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, guidrv_flexcolor_func66702.o(i._SetPhysRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _SetPhysRAMAddr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[4b]"></a>_SetRect</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, guidrv_flexcolor_func66702.o(i._SetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i.GUIDRV_FlexColor_SetFunc66702)
</UL>
<P><STRONG><a name="[6f]"></a>_SetReg_B16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66702.o(i._SetReg_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i._SetInterface)
</UL>
<P><STRONG><a name="[71]"></a>_SetReg_B8</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidrv_flexcolor_func66702.o(i._SetReg_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _SetReg_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i._SetInterface)
</UL>
<P><STRONG><a name="[70]"></a>_WritePara_B16</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidrv_flexcolor_func66702.o(i._WritePara_B16))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i._SetInterface)
</UL>
<P><STRONG><a name="[72]"></a>_WritePara_B8</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, guidrv_flexcolor_func66702.o(i._WritePara_B8))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _WritePara_B8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_flexcolor_func66702.o(i._SetInterface)
</UL>
<P><STRONG><a name="[dc]"></a>_Add</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gui_fillpolygon.o(i._Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[115]"></a>_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoX))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[116]"></a>_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoY))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[a4]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[19e]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[19f]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[1a0]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[a9]"></a>_DrawBitmap</STRONG> (Thumb, 678 bytes, Stack size 104 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[af]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[18a]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[18d]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[1a4]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[1a5]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[1a3]"></a>_Findy1</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[184]"></a>_Invalidate1Abs</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[62]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[188]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[61]"></a>cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i.cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[134]"></a>_DispLine</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[b9]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[b5]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>

<P><STRONG><a name="[194]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[124]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 806 bytes, Stack size 160 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[125]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 752 bytes, Stack size 104 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
